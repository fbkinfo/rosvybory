:javascript
  var regions=#{regions_hash.to_json};

-unless @user_app.errors.blank?
  %h4.text-error
    В форме присутствуют ошибки, пожалуйста, исправьте их.
  .text-error
    Поля с ошибками подсвечены красным цветом.

= semantic_form_for @user_app do |f|

  = f.inputs "В каком качестве вы готовы участвовать в общественном контроле за выборами?", :id => "user_app_desired_statuses", :class => ("text-error" if @user_app.errors[:desired_statuses].any?) do
    -@user_app.errors[:desired_statuses].each do |err|
      %span.text-error=err
      %br
    -UserApp.future_statuses_methods.each do | method_name|
      = f.input method_name, :as => :boolean
  %br
  = f.input :adm_region, :as => :select, :collection => Region.adm_regions.all, :input_html => {:style => "width: 280px;"}
  = f.input :region, :as => :select, :collection => (@user_app.adm_region ? @user_app.adm_region.regions : []), :input_html => {:style => "width: 280px;"}, hint: "Можно оставить пустым или выбрать конкретный район" #ширина прописана inline, чтобы select2 её правильно подхватил, через css он не понимает
  -#= f.input :region, :as => :select, :collection => option_groups_from_collection_for_select(Region.cities.where(name: "Москва").first.regions, :regions, :name, :id, :name), :input_html => {:style => "width: 280px;", :class => "selectify"}
  = f.input :uic, :label => "Номера желаемых УИК, через запятую", :input_html => {:disabled => true}, :placeholder => "Пример: 12345, 23456"

  = f.inputs "Личные данные", :id => "personal_info" do
    = f.input :last_name
    = f.input :first_name
    = f.input :patronymic
    = f.input :phone, :label => "Контактный телефон", :placeholder => "Пример: 903 111 22 33"
    = f.input :email
    = f.input :year_born
    = f.input :sex_male, :as => :radio, collection: {"Мужской" => true, "Женский" => false}

  = f.inputs "Подробнее", :id => "details" do
    = f.input :current_status, :label => "Текущий статус в системе избирательных комиссий:", :as => :radio, collection: current_status_options
    = f.input :has_car, :label => "Есть автомобиль?", :as => :radio, collection: {"Да" => true, "Нет" => false}
    = f.input :legal_status, :label => "Есть юридическое образование?", :as => :radio, collection: {"Да" => UserApp::LEGAL_STATUS_YES, "Нет" => UserApp::LEGAL_STATUS_NO, "Есть статус адвоката" => UserApp::LEGAL_STATUS_LAWYER}

  = f.inputs "Прежний опыт", :id => "experience" do
    -UserApp.previous_statuses_methods.each do |method_name|
      = f.input method_name, :as => :boolean
    = f.input :experience_count, :label => "Сколько раз:", :min => 0, :input_html => {:disabled => true}

  = f.inputs :name => "Аккаунты в соц. сетях", :id => "social_accounts" do
    -UserApp::SOCIAL_ACCOUNTS.each do |provider_key, provider_name|
      = f.input 'social_'+provider_key.to_s, :label => provider_name, placeholder: social_account_placeholders(provider_key)
  = f.inputs "Дополнителные сведения", :id => "extra" do
    = f.input :extra, :label => false, :input_html => {:rows => 10}

  = f.actions do
    = f.input :data_processing_allowed, :as => :boolean, :label => "Соглашаюсь на обработку персональных данных"
    = f.action :submit, :label => "Зарегистрироваться", button_html: { class: 'btn', :disabled => true }
    -#= link_to t('.cancel', :default => t("helpers.links.cancel")), user_apps_path, :class => 'btn'
