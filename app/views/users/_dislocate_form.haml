:javascript
  var regions=#{regions_hash.to_json};

= include_gon

-unless @user.errors.blank?
  %h4
    Найдены ошибки:
    -@user.errors.full_messages.each do |message|
      %br
      = message

= semantic_form_for @user, url: user_path(@user, dislocation: true), builder: ::Formtastic::FormBuilder, remote: true do |f|
  = f.inputs do
    = f.input :last_name
    = f.input :first_name
    = f.input :patronymic
    = f.input :address, :input_html => {:rows => 2}
  = f.inputs "Расстановка наблюдателя", "data-role" => "observer-roles", class: "hidden" do
    = f.semantic_fields_for :user_current_roles do |fc|
      = render 'user_current_role_fields', :f => fc

    = link_to_add_association 'Добавить роль', f, :user_current_roles
  = f.inputs  "Другие данные", "data-role" => "user-fields-container" do
    = f.input :roles, collection: Role.all, :input_html => {:style => "width: 300px;", disabled: true}
    = f.input :email, :input_html => {disabled: true}
    = f.input :phone, :input_html => {disabled: true}
    = f.input :adm_region, as: :select, collection: Region.adm_regions.pluck(:name, :id), input_html: {:style => "width: 220px;", disabled: true}
    = f.input :region, as: :select, collection: Region.mun_regions.pluck(:name, :id), input_html: {:style => "width: 220px;", disabled: true}
    -#= f.input :organisation, as: :select, collection: Organisation.accessible_by(current_ability)
    = render :partial => 'personal_data_inputs', locals: {f: f}

  = f.actions do
    = f.submit 'Сохранить'
    - if letter_url(@user)
      = f.submit 'Печать', :id => 'print-button', 'data-print-url' => letter_url(@user)
:javascript
  initUserForm();
