= include_gon

-unless @user.errors.blank?
  %h4
    Найдены ошибки:
    -@user.errors.full_messages.each do |message|
      %br
      = message

= semantic_form_for @user, builder: ::Formtastic::FormBuilder, remote: true do |f|
  = f.inputs "data-role" => "user-fields-container" do
    = f.input :last_name
    = f.input :first_name
    = f.input :patronymic
    = f.input :address, :input_html => {:rows => 2}
    = f.input :roles, collection: (Role.accessible_by(current_ability, :assign_users) + f.object.roles).uniq, :input_html => {:style => "width: 300px;"}
    = f.input :email
    = f.input :phone
    = f.input :password, as: :hidden if @user.new_record?
    = f.input :adm_region, as: :select, collection: Region.adm_regions.pluck(:name, :id), input_html: {:style => "width: 220px;"} if f.object.new_record? || can?(:change_adm_region, f.object)
    = f.input :region, as: :select, collection: f.object.user_app && f.object.user_app.adm_region ? f.object.user_app.adm_region.regions.pluck(:name, :id) : [], input_html: {:style => "width: 220px;"} if f.object.new_record? || can?(:change_region, f.object)
    - if can?(:change_organisation, f.object)
      = f.input :organisation_id, as: :select, collection: Organisation.accessible_by(current_ability)
    - else
      = f.input :organisation_id, as: :hidden if f.object.new_record?
    = f.input :user_app_id, as: :hidden if f.object.new_record?
    -unless f.object.new_record?
      = render :partial => 'personal_data_inputs', locals: {f: f}

  = f.inputs "Роли наблюдателя", "data-role" => "observer-roles", class: "hidden" do
    = f.semantic_fields_for :user_current_roles do |fc|
      = render 'user_current_role_fields', :f => fc

    = link_to_add_association 'Добавить роль', f, :user_current_roles

  = f.actions do
    = f.submit "Утвердить"
:javascript
  initUserForm();
